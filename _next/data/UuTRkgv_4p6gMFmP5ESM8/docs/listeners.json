{"pageProps":{"url":"listeners","doc":{"slugs":["docs/listeners","docs/listeners/keylistener","docs/v1.0.0/listeners","docs/v1.0.0/listeners/keylistener"],"body":"---\r\ntitle: KeyListener\r\n---\r\n\r\n# Methods\r\n\r\n```typescript\r\nKeyListener.addListener(event: \"keyup\" | \"keydown\", callback: (e: KeyEvent) => void)\r\n```\r\n\r\n```typescript\r\nKeyListener.removeListener(event: \"keyup\" | \"keydown\", callback: (e: KeyEvent) => void)\r\n```\r\n\r\n```typescript\r\nKeyListener.clearAllListeners: () => void\r\n```","version":"v1.0.0","frontmatter":{"title":"KeyListener"}},"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Methods\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-typescript\",\n        children: \"KeyListener.addListener(event: \\\"keyup\\\" | \\\"keydown\\\", callback: (e: KeyEvent) => void)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-typescript\",\n        children: \"KeyListener.removeListener(event: \\\"keyup\\\" | \\\"keydown\\\", callback: (e: KeyEvent) => void)\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-typescript\",\n        children: \"KeyListener.clearAllListeners: () => void\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"KeyListener"},"scope":{}}},"__N_SSG":true}